syntax = "proto3";

// The .proto file starts with a package declaration, prevents naming conflicts
package chronicle;

//enables generating a separate .java file for each generated class
option java_multiple_files = true;
//  what Java package name your generated classes should live
option java_package = "com.tonyzaro.model";
//  the class name of the wrapper class which will represent this file
option java_outer_classname = "ChronicleProtos";

import "google/protobuf/timestamp.proto";

// To be serialized & added into the LogsImportLog.data field below
message ChronicleLogData {
  string id = 1;
  string metric1 = 2;
  string metric2 = 3;
  string metric3 = 4;
  string dim1 = 5;
  string dim2 = 6;
  string dim3 = 7;
}

// based on
// https://cloud.google.com/chronicle/docs/reference/rest/v1alpha/projects.locations.instances.logTypes.logs#Log
message LogsImportLog {
  // Output only. The resource name of this log.
  optional string name = 1;
  // Required. Raw data for the log entry. A base64-encoded string.
  bytes data = 2 ;
  // Required. Timestamp of the log entry.
  google.protobuf.Timestamp log_entry_time = 3 ;
  // Required. Time when log entry was collected. Must be after log_entry_time.
  google.protobuf.Timestamp collection_time = 4;
  // Optional. The user-configured environment namespace to id the data domain
  optional string environment_namespace = 5;
}
// based on
// https://cloud.google.com/chronicle/docs/reference/rest/v1alpha/projects.locations.instances.logTypes.logs/import#LogsInlineSource
message LogsImportSource {
  // Required. The logs being imported.
  repeated LogsImportLog logs = 1;
  // Required. The forwarder sending this import request.
  string forwarder = 2;
  // Optional. Source file name.
  optional string source_filename = 3;
}

// based on
// https://cloud.google.com/chronicle/docs/reference/rest/v1alpha/projects.locations.instances.logTypes.logs/import
message LogsImportRequest {
  // Optional. Opaque hint to help parsing the log.
  optional string hint = 1;
  // Required. Logs to be imported are specified inline.
  LogsImportSource inline_source = 2;
}

